* 다이나믹 프로그래밍 == 동적 계획법
    - 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법 
    
    - 이미 계산된 결과(작은 문제)는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 함 

    - 구현은 두가지 방식으로 구성
        - 탑다운(메모제이션, 하향식)
        - 보텀업(상향식)
    
    - 전형적인 형태는 보텀업 방식 
        - 결과 저장용 리스트는 DP 테이블이라고 함 

* 조건
    1. 최적 부분 구조(Optimal Substructure)
        - 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있음
    
    2. 중복되는 문제(Overlapping Subproblem)
        - 동일한 작은 문제를 반복적으로 해결해야함 

* 메모이제이션(Memoization) = 탑다운 방식(하향식)
    - 한번 계산한 결과를 메모리 공간에 메모하는 기법
        - 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져옴 
        - 값을 기록해 놓는다는 점에서 캐싱이라고도 함 
