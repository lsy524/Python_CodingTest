# 거스름돈 문제 
'''
* 해결 아이디어 
    - 가장 큰 화폐 단위부터 돈을 거슬러 줌
    - 가장 큰 회폐 단위부터 돈을 거슬러 주는 것이 최적의 해를 보장하는가?
        - 가지고 있는 동전 중에서 큰 단위가 항상 작은 단위의 배숭이므로 작은 단위의 
        동전들을 종합해 다른 해가 나올 수 없기 때문

* 시간복잡도 
    - 화폐의 종류가 K라고 할 때, 소스코드의 시간복잡도는 O(K)
    - 이 알고리즘의 시간 복잡도는 거슬러줘야 하는 금액과는 무관하며, 동전의 총 종류에만 영향을 받음
'''



a = 1260 
cnt = 0

array = [500, 100, 50, 10] 

for i in array:
    cnt += a // i  # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기 
    a %= i         # 거슬러 주고 남은 동전의 개수를 구함 

print(cnt)
