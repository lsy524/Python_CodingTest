# 큰 수의 법칙 

'''
* 문제 해결 아이디어 예시 
    - 예시 데이터는 M(총 더해야할 개수) : 8, K(가장 큰 수를 더할 수 있는 개수) : 3
    - data : [2, 4, 5, 4, 6]
    - result : (6+6+6+5) + (6+6+6+5)

    1. 반복되는 수열 파악 : 
        - (6+6+6+5)
    2. 반복되는 수열의 길이 파악 
        -  K + 1 => 4 
    3. 수열이 반복되는 횟수 파악 
        - M // (K + 1) => 2번 반복 
    4. 가장 큰 수가 등장하는 횟수
        - (M // (K + 1)) * K => 6번 등장 
    5. M // (K + 1)이 나누어 떨어지지 않는 경우 고려 
        - M % (K + 1)로 나눈 나머지만큼 가장 큰 수가 추가로 더해준다. 
    6. 가장 큰수가 더해지는 횟수 
        - int(M // (K + 1)) * K + M % (K + 1)
    7. 가장 작은 수가 더해지는 횟수 
        - (M - 가장 큰 수를 더해야하는 횟수) 
'''


n, m, k = map(int, input().split())
data = list(map(int, input().split()))

data.sort()
first = data[n - 1]
second = data[n - 2]
result = 0

count = int(m // (k + 1)) * k  # 가장 큰 수가 더해지는 횟수
count += m % (k + 1)           # 나누어 떨어지지 않는 경우 나머지 만큼 더해준다. 

result += count * 6            # 가장 큰 수 더하기 
result += (m - count) * second # 두 번째로 큰 수 더하기 

print(result)