# 두 배열의 원소 교체 

'''
* 문제 해결 아이디어 
    - 매번 배열 A에서 가장 작은 원소를 골라서 배열 B에서 가장 큰 원소와 교체
    1. 가장 먼저 배열 A와 B가 주어지면 A에 대하여 오름차순 정렬하고, B에 대하여 내림차순 정렬한다.
    2. 이후 두 배열의 원소를 첫 번째 인덱스부터 차례대로 확인하면서 A의 원소가 B의 원소보다 작을 때에만 교체 수행

    - 두 배열의 원소가 최대 100,000개 까지 입력될 수 있으므로, 최악의 경우 O(NlogN)을 보장하는 정렬 알고리즘 이용 
'''

n, k = map(int, input().split())    # n, k 입력

a = list(map(int, input().split())) # 배열 a의 모든 원소를 입력 받기
b = list(map(int, input().split())) # 배열 b의 모든 원소를 입력 받기 

a.sort()             # 배열 a 오름차순 정렬 
b.sort(reverse=True) # 배열 b 내림차순 정렬 

# 첫 번째 인덱스부터 확인하며, 두 배열의 원소를 최대 k번 비교 
for i in range(k):
    # a의 원소가 b의 원소보다 작은 경우 
    if a[i] < b[i] :
        a[i], b[i] = b[i], a[i] # 두 원소 교체 
    # a의 원소가 b의 원소보다 크거나 같을 경우 
    else :
        break # 반복문 탈출 

print(sum(a))   # 배열 a의 모든 원소의 합 출력 


