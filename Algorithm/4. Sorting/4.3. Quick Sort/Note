* 퀵 정렬 
    - 기준 데이터를 설정하고 그 기준보다 큰 데이터와 작은 데이터의 위치를 바꾸는 방법 
    - 일반적인 상황에서 가장 많이 사용되는 정렬 알고리즘
    - 가장 기본적인 퀵 정렬은 첫 번째 데이터를 기준 데이터(Pivot)로 설정

* 동작 
    - 데이터 = [5, 7, 9, 0, 3, 1, 6, 2, 4, 8]

    1. 현재 피벗의 값을 5로 설정한다. 왼쪽에서 부터 5보다 큰 데이터를 선택하므로 "7"이 선택되고, 오른쪽에서 부터 5보다 작은 데이터를 선택하므로 "4"가 선택된다. 이제 이 두 데이터(7, 4)의 위치를 서로 변경한다.
    - 데이터 = [5, "4", 9, 0, 3, 1, 6, 2, "7", 8]
    
    2. 왼쪽에서 부터 5보다 큰 데이터를 선택하므로 "9"가 선택되고, 오른쪽에서 부터 5보다 작은 데이터를 선택하므로 "2"가 선택된다. 이제 이 두 데이터(9, 2)의 위치를 서로 변경한다.
    - 데이터 = [5, 4, "2", 0, 3, 1, 6, "9", 7, 8]

    3. 왼쪽에서 부터 5보다 큰 데이터를 선택하므로 "6"이 선택되고, 오른쪽에서 부터 5보다 작은 데이터를 선택하므로 "1"가 선택된다.
    단, 이처럼 위치가 엇갈리는 경우 "피벗"과 "작은 데이터"의 위치를 서로 변경한다.
    - 데이터 = ["1", 4, 2, 0, 3, "5", 6, 9, 7, 8]

    4. [분활완료] 이제 "5"의 왼쪽에 있는 데이터는 모두 5보다 작고, 오른쪽에 있는 데이터는 모두 "5"보다 크다. 
    이렇게 피벗을 기준으로 데이터 묶음을 나누는 작업을 분할 or 파티션 이라고 함 
    - 데이터 = [1, 4, 2, 0, 3, 5, 6, 9, 7, 8]

    5. [왼쪽 데이터 묶음 정렬] 왼쪽에 있는 데이터에 대해서 정렬 수행 
    - 데이터 = [1, 4, 2, 0, 3]

    6. [오른쪽 데이터 묶음 정렬] 오른쪽에 있는 데이터에 대해서 정렬 수행 
    - 데이터 = [6, 9, 7, 8]

* 시간 복잡도
    - 평균 O(NlogN)
    - 최악의 경우 O(N**2) 
        - 첫 번째 원소를 피벗으로 삼을 때, 이미 정렬된 배열에 대해서 퀵 정렬을 수행하면 최악의 경우를 가짐 
