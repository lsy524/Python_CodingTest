* 셸 정렬
    - 단순 삽입 정렬의 장점은 살리고 단점은 보완하여 더 빠르게 정렬하는 알고리즘
    - 먼저 정렬할 배열의 원소를 그룹으로 나눠 각 그룹별로 정렬을 수행하고 그 후 정렬된 그룹을 합치는 작업을 반복하여 원소의 이동 횟수를 줄임 
    - 정렬 횟수는 늘어나지만 전체적으로 원소의 이동 횟수가 줄어들어 효율적
    - 이웃하지 않고 떨어져 있는 원소를 서로 교환하므로 안정적이지 않음
    - 시간 복잡도 : O(n ** 1.25)

    - ex) [8,1,4,2,7,6,3,5]

        - 1. "4-정렬"(서로 4칸 떨어진 원소를 정렬하는 방법)
            -> (8, 7), (1, 6), (4, 3), (2, 5)
            -> (7, 8), (1, 6), (3, 4), (2, 5)
            -> [7,1,3,2,8,6,4,5] "4-정렬" 완료

        - 2. "2-정렬"(서로 2칸 떨어진 원소를 정렬하는 방법)
            -> (7, 3, 8, 4), (1, 2, 6, 5)
            -> (3, 4, 7, 8), (1, 2, 5, 6)
            -> [3,1,4,2,7,5,8,6] "2-정렬" 완료
        
        - 3. "1-정렬"
            -> [1,2,3,4,5,6,7,8] "1-정렬" 완료

        - 셸 정렬 과정에서 수행하는 각각의 정렬을 h-정렬이라고함
          h 값을 4, 2, 1로 감소시키면서 정렬을 총 7번 수행 
        
        - 즉, 배열을 바로 단순 산입 정렬하지 않고 "4-정렬"과 "2-정렬"을 먼저 수행하여 정렬을 거의 마친 후 3번 전 [3,1,4,2,7,5,8,6] 배열을 만듬 
          그리고 마지막에 단순 삽입 정렬을 한 번 수행하여 정렬 완료
